package com.reactlibrary;

import android.util.Log;

import com.facebook.react.uimanager.ThemedReactContext;
import com.facebook.react.uimanager.ViewGroupManager;
import com.facebook.react.uimanager.annotations.ReactProp;

public class RNValleyRtcApiVideoViewManager extends ViewGroupManager<RNValleyRtcApiVideoView> {
    private static final String VIDEO_VIEW_MANAGER_NAME = "RNValleyRtcApiVideoView";
    private static final String TAG = "RNValleyRtcApiVideoViewManager";
    private ThemedReactContext mContext;
    private int index = -1;
    private Boolean remove = true;
    private Boolean local = true;
    private Boolean reload = false;
    private String userId = "";

    @Override
    public String getName() {
        return VIDEO_VIEW_MANAGER_NAME;
    }

    @Override
    protected RNValleyRtcApiVideoView createViewInstance(ThemedReactContext reactContext) {
        this.mContext = reactContext;
        RNValleyRtcApiVideoView videoView = new RNValleyRtcApiVideoView(reactContext);
        return videoView;
    }

    @ReactProp(name = "index")
    public void setIndex(final RNValleyRtcApiVideoView view, int index) {
        this.index = index;
    }

    @ReactProp(name = "userId")
    public void setUserId(final RNValleyRtcApiVideoView view, String userId) {
        this.userId = userId;
    }

    @ReactProp(name = "remove")
    public void setRemove(final RNValleyRtcApiVideoView view, Boolean remove) {
        this.remove = remove;
    }

    @ReactProp(name = "local")
    public void setLocal(final RNValleyRtcApiVideoView view, Boolean local) {
        this.local = local;
    }

    @ReactProp(name = "reload")
    public void setReload(final RNValleyRtcApiVideoView view, Boolean reload) {
        this.reload = reload;
        Log.d(TAG, "===== setReload, reload = " + this.reload + ", index = " + this.index + ", remove = " + this.remove +
            ", local = " + this.local + ", userId = " + this.userId);

        if (this.reload) {
            if (this.index != -1) {
                if (this.remove) {
                    if (this.local) {
                        RNValleyRtcApiSingleton.getInstance().ChannelRemoveLocalVideo(this.index);
                    }
                    else {
                        if (this.userId != "") {
                            RNValleyRtcApiSingleton.getInstance().ChannelRemoveUserVideo(this.userId, this.index);
                        }
                    }
                }
                else {
                    if (this.local) {
                        RNValleyRtcApiSingleton.getInstance().ChannelSetLocalVideo(view.getVideoView(), this.index);
                    }
                    else {
                        if (this.userId != "") {
                            RNValleyRtcApiSingleton.getInstance().ChannelSetUserVideo(view.getVideoView(), this.userId, this.index);
                        }
                    }
                }
            }
        }
    }
}
