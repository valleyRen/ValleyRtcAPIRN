package com.reactlibrary;

import android.util.Log;

import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.uimanager.ThemedReactContext;
import com.facebook.react.uimanager.ViewGroupManager;
import com.facebook.react.uimanager.annotations.ReactProp;

public class RNValleyRtcApiVideoViewManager extends ViewGroupManager<RNValleyRtcApiVideoView> {
    private static final String VIDEO_VIEW_MANAGER_NAME = "RNValleyRtcApiVideoView";
    private static final String TAG = "RNValleyRtcApiVideoViewManager";
    private ThemedReactContext mContext;


    @Override
    public String getName() {
        return VIDEO_VIEW_MANAGER_NAME;
    }

    @Override
    protected RNValleyRtcApiVideoView createViewInstance(ThemedReactContext reactContext) {
        this.mContext = reactContext;
        RNValleyRtcApiVideoView videoView = new RNValleyRtcApiVideoView(reactContext);
        return videoView;
    }

    @ReactProp(name = "videoInfo")
    public void setVideoInfo(final RNValleyRtcApiVideoView view, ReadableMap map) {
        int index = map != null && map.hasKey("index") ? map.getInt("index") : -1;
        String userId = map != null && map.hasKey("userId") ? map.getString("userId") : "-1";
        Boolean remove = map != null && map.hasKey("remove") ? map.getBoolean("remove") : false;
        Boolean local = map != null && map.hasKey("local") ? map.getBoolean("local") : false;
        Boolean reload = map != null && map.hasKey("reload") ? map.getBoolean("reload") : false;

        Log.d("setVideoInfo", "===== setVideoInfo, index = " + index + ", userId = "
                + userId + ", remove = " + remove + ", local = " + local + ", reload = " + reload);

        view.setIndex(index);
        view.setUserId(userId);
        view.setRemove(remove);
        view.setLocal(local);
        view.setReload(reload);
    }
}
