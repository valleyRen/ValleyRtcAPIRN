package com.reactlibrary;

import android.content.Context;
import android.support.annotation.NonNull;
import android.util.AttributeSet;
import android.util.Log;
import android.view.Gravity;
import android.view.SurfaceView;
import android.view.ViewGroup;
import android.widget.FrameLayout;

import com.facebook.react.uimanager.ThemedReactContext;
import com.facebook.react.uimanager.annotations.ReactProp;

public class RNValleyRtcApiVideoView extends FrameLayout {

    private SurfaceView videoView;
    private static final String TAG = "RNValleyRtcApiVideoView";
    private Context context;
    private ViewGroup.LayoutParams layoutParams;
    private static int g_Count = 0;

    private int viewIndex = 0;
    private int index = -1;
    private Boolean remove = true;
    private Boolean local = true;
    private Boolean reload = false;
    private String userId = "";

    public RNValleyRtcApiVideoView(@NonNull ThemedReactContext reactContext) {
        this(reactContext, null);
    }

    public RNValleyRtcApiVideoView(@NonNull ThemedReactContext reactContext, AttributeSet attrs) {
        this(reactContext, attrs, 0);
    }

    public RNValleyRtcApiVideoView(@NonNull ThemedReactContext reactContext, AttributeSet attrs, int defStyleAttr) {
        super(reactContext, attrs, defStyleAttr);

        this.context = reactContext;

        layoutParams = new ViewGroup.LayoutParams(
                ViewGroup.LayoutParams.MATCH_PARENT,
                ViewGroup.LayoutParams.MATCH_PARENT);

        FrameLayout.LayoutParams aspectRatioParams = new FrameLayout.LayoutParams(
                FrameLayout.LayoutParams.MATCH_PARENT,
                FrameLayout.LayoutParams.MATCH_PARENT);
        aspectRatioParams.gravity = Gravity.CENTER;

        // todo: for test
//        videoView = new MySurfaceView(context);

        this.viewIndex = g_Count++;
        Log.d(TAG, "===== new SurfaceView, view index = " + this.viewIndex);
        videoView = new SurfaceView(context);
        videoView.setLayoutParams(layoutParams);
        addViewInLayout(videoView, 0, aspectRatioParams);
    }

    public void setIndex(int index) {
        Log.d(TAG, "===== setIndex, index = " + index + "view index = " + this.viewIndex);
        this.index = index;
    }

    public void setUserId(String userId) {
        Log.d(TAG, "===== setUserId, userId = " + userId + "view index = " + this.viewIndex);
        this.userId = userId;
    }

    public void setRemove(Boolean remove) {
        Log.d(TAG, "===== setRemove, remove = " + remove + "view index = " + this.viewIndex);
        this.remove = remove;
    }

    public void setLocal(Boolean local) {
        Log.d(TAG, "===== setLocal, local = " + local + "view index = " + this.viewIndex);
        this.local = local;
    }

    public void setReload(Boolean reload) {
        this.reload = reload;

        Log.d(TAG, "===== setReload, reload = " + this.reload + ", index = " + this.index + ", remove = " + this.remove +
                ", local = " + this.local + ", userId = " + this.userId + "view index = " + this.viewIndex);

        if (this.reload) {
            if (this.index != -1) {
                if (this.remove) {
                    if (this.local) {
                        RNValleyRtcApiSingleton.getInstance().ChannelRemoveLocalVideo(this.index);
                    }
                    else {
                        if (this.userId != "") {
                            RNValleyRtcApiSingleton.getInstance().ChannelRemoveUserVideo(this.userId, this.index);
                        }
                    }
                }
                else {
                    if (this.local) {
                        RNValleyRtcApiSingleton.getInstance().ChannelSetLocalVideo(videoView, this.index);
                    }
                    else {
                        if (this.userId != "") {
                            RNValleyRtcApiSingleton.getInstance().ChannelSetUserVideo(videoView, this.userId, this.index);
                        }
                    }
                }
            }
        }
    }
}
