/*
 * @Author: LanPZzzz 
 * @Date: 2018-12-20 11:14:00 
 * @Last Modified by: LanPZzzz
 * @Last Modified time: 2019-01-11 18:12:52
 */
import React, {Component} from 'react';
import PropTypes from 'prop-types';
import {
  requireNativeComponent,
  ViewPropTypes,
  View,
} from 'react-native';

// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)
const viewPropTypes = ViewPropTypes || View.propTypes;

let RNValleyRtcApiVideoView = requireNativeComponent('RNValleyRtcApiVideoView', RCTValleyVideoView);
class RCTValleyVideoView extends Component {
  static propTypes = {
    ...viewPropTypes,

    videoInfo: PropTypes.shape({
      index:PropTypes.number.isRequired,
      userId: PropTypes.string.isRequired,
      reload: PropTypes.bool.isRequired,
      remove: PropTypes.bool.isRequired,
      local: PropTypes.bool.isRequired,
    }),
  }

  render() {
    return (
      <RNValleyRtcApiVideoView  {...this.props}/>
    )
  }
}

// RCTValleyVideoView.propTypes = propTypes;

module.exports = RCTValleyVideoView;


// android
// view 
// fun setLocationStyle(style: ReadableMap) {
//   if (style.hasKey("fillColor")) {
//       locationStyle.radiusFillColor(style.getInt("fillColor"))
//   }

//   if (style.hasKey("strokeColor")) {
//       locationStyle.strokeColor(style.getInt("strokeColor"))
//   }

//   if (style.hasKey("strokeWidth")) {
//       locationStyle.strokeWidth(style.getDouble("strokeWidth").toFloat())
//   }

//   if (style.hasKey("image")) {
//       val drawable = context.resources.getIdentifier(
//               style.getString("image"), "drawable", context.packageName)
//       locationStyle.myLocationIcon(BitmapDescriptorFactory.fromResource(drawable))
//   }
// }

// ios
// LocationStyle.h
// @interface LocationStyle : NSObject
// @property(nonatomic, strong) UIImage *image;
// @property(nonatomic, strong) UIColor *fillColor;
// @property(nonatomic, strong) UIColor *strokeColor;
// @property(nonatomic, assign) CGFloat strokeWidth;
// @end

// LocationStyle.m
// #import "LocationStyle.h"

// @implementation LocationStyle
// @end

// RCT_EXPORT_VIEW_PROPERTY(locationStyle, LocationStyle)

// /Users/zhangjianping/Desktop/2.code/13.talksdk/0.rndemo/react-native-amap3d/lib/ios/AMap3D/RCTConvert+AMap3D.m
// + (LocationStyle *)LocationStyle:(id)json {
//   LocationStyle *locationStyle = [LocationStyle new];
//   locationStyle.fillColor = [self UIColor:json[@"fillColor"]];
//   locationStyle.strokeColor = [self UIColor:json[@"strokeColor"]];
//   locationStyle.strokeWidth = [self CGFloat:json[@"strokeWidth"]];
//   locationStyle.image = [UIImage imageNamed:[self NSString:json[@"image"]]];
//   return locationStyle;
// }

// js
// /Users/zhangjianping/Desktop/2.code/13.talksdk/0.rndemo/react-native-amap3d/lib/js/maps/MapView.js
// export const LocationStyle = PropTypes.shape({
//   image: PropTypes.string,
//   fillColor: PropTypes.string,
//   strokeColor: PropTypes.string,
//   strokeWidth: PropTypes.number,
// })

