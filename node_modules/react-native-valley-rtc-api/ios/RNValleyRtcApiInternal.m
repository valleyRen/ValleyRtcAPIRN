#import "RNValleyRtcApiInternal.h"
#import <ValleyRtcAPI/ValleyRtcAPI_OC.h>
#import "RNValleyRtcApi.h"

@implementation RNValleyRtcApiInternal {
    RNValleyRtcAPI *valleyRtcAPIObj;
}

static RNValleyRtcApiInternal* instance = nil;

+(RNValleyRtcApiInternal*)GetInstance {
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        instance = [[self alloc]init];
    });
    return instance;
}

-(void)InitSDK:(nonnull NSString*)workfolder localconfig: (nullable NSString*)localconfig rtcApi:(nonnull RNValleyRtcAPI*)rtcApi {
    valleyRtcAPIObj = rtcApi;
    
#if !TARGET_OS_SIMULATOR
	[ValleyRtcAPI InitSDK:workfolder localconfig:localconfig];
#endif
}

-(void)SetAuthoKey:(nonnull NSString*)authokey {
#if !TARGET_OS_SIMULATOR
	[ValleyRtcAPI SetAuthoKey:authokey];
#endif
}

-(void)CleanSDK {
#if !TARGET_OS_SIMULATOR
	[ValleyRtcAPI CleanSDK];
#endif
}

-(nullable NSString*)GetErrDesc:(int)ec {
#if TARGET_OS_SIMULATOR
    return @"SIMULATOR";
#else
	return [ValleyRtcAPI GetErrDesc:ec];
#endif
}

-(nonnull NSString*)GetSDKVersion {
#if TARGET_OS_SIMULATOR
    return @"";
#else
	return [ValleyRtcAPI GetSDKVersion];
#endif
}

-(nullable IRtcChannel*)CreateChannel:(BOOL)withVideo {
#if TARGET_OS_SIMULATOR
    return nil;
#else
	return [ValleyRtcAPI CreateChannel:withVideo];
#endif
}

-(void)SetLocalVideo:(NSInteger)index hVideo:(nonnull xVideoCanvas*)hVideo {
#if !TARGET_OS_SIMULATOR
    [valleyRtcAPIObj ChannelSetLocalVideo:index hVideo:hVideo];
#endif
}

-(void)RemoveLocalVideo:(NSInteger)index {
#if !TARGET_OS_SIMULATOR
    [valleyRtcAPIObj ChannelRemoveLocalVideo:index];
#endif
}

-(void)SetUserVideo:(NSInteger)index userid:(nonnull NSString*)userid hVideo:(nonnull xVideoCanvas*)hVideo {
#if !TARGET_OS_SIMULATOR
    [valleyRtcAPIObj ChannelSetUserVideo:index userid:userid hVideo:hVideo];
#endif
}

-(void)RemoveUserVideo:(NSInteger)index userid:(nonnull NSString*)userid {
#if !TARGET_OS_SIMULATOR
    [valleyRtcAPIObj ChannelRemoveUserVideo:index userid:userid];
#endif
}


@end
